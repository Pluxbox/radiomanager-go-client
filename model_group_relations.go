/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
)

// GroupRelations struct for GroupRelations
type GroupRelations struct {
	Users *GroupRelationsUsers `json:"users,omitempty"`
	Broadcasts *GroupRelationsBroadcasts `json:"broadcasts,omitempty"`
	Programs *GroupRelationsPrograms `json:"programs,omitempty"`
}

// NewGroupRelations instantiates a new GroupRelations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupRelations() *GroupRelations {
	this := GroupRelations{}
	return &this
}

// NewGroupRelationsWithDefaults instantiates a new GroupRelations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupRelationsWithDefaults() *GroupRelations {
	this := GroupRelations{}
	return &this
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *GroupRelations) GetUsers() GroupRelationsUsers {
	if o == nil || isNil(o.Users) {
		var ret GroupRelationsUsers
		return ret
	}
	return *o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupRelations) GetUsersOk() (*GroupRelationsUsers, bool) {
	if o == nil || isNil(o.Users) {
    return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *GroupRelations) HasUsers() bool {
	if o != nil && !isNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given GroupRelationsUsers and assigns it to the Users field.
func (o *GroupRelations) SetUsers(v GroupRelationsUsers) {
	o.Users = &v
}

// GetBroadcasts returns the Broadcasts field value if set, zero value otherwise.
func (o *GroupRelations) GetBroadcasts() GroupRelationsBroadcasts {
	if o == nil || isNil(o.Broadcasts) {
		var ret GroupRelationsBroadcasts
		return ret
	}
	return *o.Broadcasts
}

// GetBroadcastsOk returns a tuple with the Broadcasts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupRelations) GetBroadcastsOk() (*GroupRelationsBroadcasts, bool) {
	if o == nil || isNil(o.Broadcasts) {
    return nil, false
	}
	return o.Broadcasts, true
}

// HasBroadcasts returns a boolean if a field has been set.
func (o *GroupRelations) HasBroadcasts() bool {
	if o != nil && !isNil(o.Broadcasts) {
		return true
	}

	return false
}

// SetBroadcasts gets a reference to the given GroupRelationsBroadcasts and assigns it to the Broadcasts field.
func (o *GroupRelations) SetBroadcasts(v GroupRelationsBroadcasts) {
	o.Broadcasts = &v
}

// GetPrograms returns the Programs field value if set, zero value otherwise.
func (o *GroupRelations) GetPrograms() GroupRelationsPrograms {
	if o == nil || isNil(o.Programs) {
		var ret GroupRelationsPrograms
		return ret
	}
	return *o.Programs
}

// GetProgramsOk returns a tuple with the Programs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupRelations) GetProgramsOk() (*GroupRelationsPrograms, bool) {
	if o == nil || isNil(o.Programs) {
    return nil, false
	}
	return o.Programs, true
}

// HasPrograms returns a boolean if a field has been set.
func (o *GroupRelations) HasPrograms() bool {
	if o != nil && !isNil(o.Programs) {
		return true
	}

	return false
}

// SetPrograms gets a reference to the given GroupRelationsPrograms and assigns it to the Programs field.
func (o *GroupRelations) SetPrograms(v GroupRelationsPrograms) {
	o.Programs = &v
}

func (o GroupRelations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	if !isNil(o.Broadcasts) {
		toSerialize["broadcasts"] = o.Broadcasts
	}
	if !isNil(o.Programs) {
		toSerialize["programs"] = o.Programs
	}
	return json.Marshal(toSerialize)
}

type NullableGroupRelations struct {
	value *GroupRelations
	isSet bool
}

func (v NullableGroupRelations) Get() *GroupRelations {
	return v.value
}

func (v *NullableGroupRelations) Set(val *GroupRelations) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupRelations) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupRelations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupRelations(val *GroupRelations) *NullableGroupRelations {
	return &NullableGroupRelations{value: val, isSet: true}
}

func (v NullableGroupRelations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupRelations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


