/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
)

// ModelTypeRelations struct for ModelTypeRelations
type ModelTypeRelations struct {
	Campaigns *ModelTypeRelationsCampaigns `json:"campaigns,omitempty"`
	Broadcasts *ModelTypeRelationsBroadcasts `json:"broadcasts,omitempty"`
	Programs *ModelTypeRelationsPrograms `json:"programs,omitempty"`
	Contacts *ModelTypeRelationsContacts `json:"contacts,omitempty"`
	Presenters *ModelTypeRelationsPresenters `json:"presenters,omitempty"`
	Items *ModelTypeRelationsItems `json:"items,omitempty"`
}

// NewModelTypeRelations instantiates a new ModelTypeRelations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelTypeRelations() *ModelTypeRelations {
	this := ModelTypeRelations{}
	return &this
}

// NewModelTypeRelationsWithDefaults instantiates a new ModelTypeRelations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelTypeRelationsWithDefaults() *ModelTypeRelations {
	this := ModelTypeRelations{}
	return &this
}

// GetCampaigns returns the Campaigns field value if set, zero value otherwise.
func (o *ModelTypeRelations) GetCampaigns() ModelTypeRelationsCampaigns {
	if o == nil || isNil(o.Campaigns) {
		var ret ModelTypeRelationsCampaigns
		return ret
	}
	return *o.Campaigns
}

// GetCampaignsOk returns a tuple with the Campaigns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTypeRelations) GetCampaignsOk() (*ModelTypeRelationsCampaigns, bool) {
	if o == nil || isNil(o.Campaigns) {
    return nil, false
	}
	return o.Campaigns, true
}

// HasCampaigns returns a boolean if a field has been set.
func (o *ModelTypeRelations) HasCampaigns() bool {
	if o != nil && !isNil(o.Campaigns) {
		return true
	}

	return false
}

// SetCampaigns gets a reference to the given ModelTypeRelationsCampaigns and assigns it to the Campaigns field.
func (o *ModelTypeRelations) SetCampaigns(v ModelTypeRelationsCampaigns) {
	o.Campaigns = &v
}

// GetBroadcasts returns the Broadcasts field value if set, zero value otherwise.
func (o *ModelTypeRelations) GetBroadcasts() ModelTypeRelationsBroadcasts {
	if o == nil || isNil(o.Broadcasts) {
		var ret ModelTypeRelationsBroadcasts
		return ret
	}
	return *o.Broadcasts
}

// GetBroadcastsOk returns a tuple with the Broadcasts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTypeRelations) GetBroadcastsOk() (*ModelTypeRelationsBroadcasts, bool) {
	if o == nil || isNil(o.Broadcasts) {
    return nil, false
	}
	return o.Broadcasts, true
}

// HasBroadcasts returns a boolean if a field has been set.
func (o *ModelTypeRelations) HasBroadcasts() bool {
	if o != nil && !isNil(o.Broadcasts) {
		return true
	}

	return false
}

// SetBroadcasts gets a reference to the given ModelTypeRelationsBroadcasts and assigns it to the Broadcasts field.
func (o *ModelTypeRelations) SetBroadcasts(v ModelTypeRelationsBroadcasts) {
	o.Broadcasts = &v
}

// GetPrograms returns the Programs field value if set, zero value otherwise.
func (o *ModelTypeRelations) GetPrograms() ModelTypeRelationsPrograms {
	if o == nil || isNil(o.Programs) {
		var ret ModelTypeRelationsPrograms
		return ret
	}
	return *o.Programs
}

// GetProgramsOk returns a tuple with the Programs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTypeRelations) GetProgramsOk() (*ModelTypeRelationsPrograms, bool) {
	if o == nil || isNil(o.Programs) {
    return nil, false
	}
	return o.Programs, true
}

// HasPrograms returns a boolean if a field has been set.
func (o *ModelTypeRelations) HasPrograms() bool {
	if o != nil && !isNil(o.Programs) {
		return true
	}

	return false
}

// SetPrograms gets a reference to the given ModelTypeRelationsPrograms and assigns it to the Programs field.
func (o *ModelTypeRelations) SetPrograms(v ModelTypeRelationsPrograms) {
	o.Programs = &v
}

// GetContacts returns the Contacts field value if set, zero value otherwise.
func (o *ModelTypeRelations) GetContacts() ModelTypeRelationsContacts {
	if o == nil || isNil(o.Contacts) {
		var ret ModelTypeRelationsContacts
		return ret
	}
	return *o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTypeRelations) GetContactsOk() (*ModelTypeRelationsContacts, bool) {
	if o == nil || isNil(o.Contacts) {
    return nil, false
	}
	return o.Contacts, true
}

// HasContacts returns a boolean if a field has been set.
func (o *ModelTypeRelations) HasContacts() bool {
	if o != nil && !isNil(o.Contacts) {
		return true
	}

	return false
}

// SetContacts gets a reference to the given ModelTypeRelationsContacts and assigns it to the Contacts field.
func (o *ModelTypeRelations) SetContacts(v ModelTypeRelationsContacts) {
	o.Contacts = &v
}

// GetPresenters returns the Presenters field value if set, zero value otherwise.
func (o *ModelTypeRelations) GetPresenters() ModelTypeRelationsPresenters {
	if o == nil || isNil(o.Presenters) {
		var ret ModelTypeRelationsPresenters
		return ret
	}
	return *o.Presenters
}

// GetPresentersOk returns a tuple with the Presenters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTypeRelations) GetPresentersOk() (*ModelTypeRelationsPresenters, bool) {
	if o == nil || isNil(o.Presenters) {
    return nil, false
	}
	return o.Presenters, true
}

// HasPresenters returns a boolean if a field has been set.
func (o *ModelTypeRelations) HasPresenters() bool {
	if o != nil && !isNil(o.Presenters) {
		return true
	}

	return false
}

// SetPresenters gets a reference to the given ModelTypeRelationsPresenters and assigns it to the Presenters field.
func (o *ModelTypeRelations) SetPresenters(v ModelTypeRelationsPresenters) {
	o.Presenters = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ModelTypeRelations) GetItems() ModelTypeRelationsItems {
	if o == nil || isNil(o.Items) {
		var ret ModelTypeRelationsItems
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelTypeRelations) GetItemsOk() (*ModelTypeRelationsItems, bool) {
	if o == nil || isNil(o.Items) {
    return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ModelTypeRelations) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given ModelTypeRelationsItems and assigns it to the Items field.
func (o *ModelTypeRelations) SetItems(v ModelTypeRelationsItems) {
	o.Items = &v
}

func (o ModelTypeRelations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Campaigns) {
		toSerialize["campaigns"] = o.Campaigns
	}
	if !isNil(o.Broadcasts) {
		toSerialize["broadcasts"] = o.Broadcasts
	}
	if !isNil(o.Programs) {
		toSerialize["programs"] = o.Programs
	}
	if !isNil(o.Contacts) {
		toSerialize["contacts"] = o.Contacts
	}
	if !isNil(o.Presenters) {
		toSerialize["presenters"] = o.Presenters
	}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableModelTypeRelations struct {
	value *ModelTypeRelations
	isSet bool
}

func (v NullableModelTypeRelations) Get() *ModelTypeRelations {
	return v.value
}

func (v *NullableModelTypeRelations) Set(val *ModelTypeRelations) {
	v.value = val
	v.isSet = true
}

func (v NullableModelTypeRelations) IsSet() bool {
	return v.isSet
}

func (v *NullableModelTypeRelations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelTypeRelations(val *ModelTypeRelations) *NullableModelTypeRelations {
	return &NullableModelTypeRelations{value: val, isSet: true}
}

func (v NullableModelTypeRelations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelTypeRelations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


