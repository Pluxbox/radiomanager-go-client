/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
)

// PresenterRelations struct for PresenterRelations
type PresenterRelations struct {
	Programs *PresenterRelationsPrograms `json:"programs,omitempty"`
	Broadcasts *PresenterRelationsBroadcasts `json:"broadcasts,omitempty"`
	ModelType *PresenterRelationsModelType `json:"model_type,omitempty"`
}

// NewPresenterRelations instantiates a new PresenterRelations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPresenterRelations() *PresenterRelations {
	this := PresenterRelations{}
	return &this
}

// NewPresenterRelationsWithDefaults instantiates a new PresenterRelations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPresenterRelationsWithDefaults() *PresenterRelations {
	this := PresenterRelations{}
	return &this
}

// GetPrograms returns the Programs field value if set, zero value otherwise.
func (o *PresenterRelations) GetPrograms() PresenterRelationsPrograms {
	if o == nil || isNil(o.Programs) {
		var ret PresenterRelationsPrograms
		return ret
	}
	return *o.Programs
}

// GetProgramsOk returns a tuple with the Programs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresenterRelations) GetProgramsOk() (*PresenterRelationsPrograms, bool) {
	if o == nil || isNil(o.Programs) {
    return nil, false
	}
	return o.Programs, true
}

// HasPrograms returns a boolean if a field has been set.
func (o *PresenterRelations) HasPrograms() bool {
	if o != nil && !isNil(o.Programs) {
		return true
	}

	return false
}

// SetPrograms gets a reference to the given PresenterRelationsPrograms and assigns it to the Programs field.
func (o *PresenterRelations) SetPrograms(v PresenterRelationsPrograms) {
	o.Programs = &v
}

// GetBroadcasts returns the Broadcasts field value if set, zero value otherwise.
func (o *PresenterRelations) GetBroadcasts() PresenterRelationsBroadcasts {
	if o == nil || isNil(o.Broadcasts) {
		var ret PresenterRelationsBroadcasts
		return ret
	}
	return *o.Broadcasts
}

// GetBroadcastsOk returns a tuple with the Broadcasts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresenterRelations) GetBroadcastsOk() (*PresenterRelationsBroadcasts, bool) {
	if o == nil || isNil(o.Broadcasts) {
    return nil, false
	}
	return o.Broadcasts, true
}

// HasBroadcasts returns a boolean if a field has been set.
func (o *PresenterRelations) HasBroadcasts() bool {
	if o != nil && !isNil(o.Broadcasts) {
		return true
	}

	return false
}

// SetBroadcasts gets a reference to the given PresenterRelationsBroadcasts and assigns it to the Broadcasts field.
func (o *PresenterRelations) SetBroadcasts(v PresenterRelationsBroadcasts) {
	o.Broadcasts = &v
}

// GetModelType returns the ModelType field value if set, zero value otherwise.
func (o *PresenterRelations) GetModelType() PresenterRelationsModelType {
	if o == nil || isNil(o.ModelType) {
		var ret PresenterRelationsModelType
		return ret
	}
	return *o.ModelType
}

// GetModelTypeOk returns a tuple with the ModelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresenterRelations) GetModelTypeOk() (*PresenterRelationsModelType, bool) {
	if o == nil || isNil(o.ModelType) {
    return nil, false
	}
	return o.ModelType, true
}

// HasModelType returns a boolean if a field has been set.
func (o *PresenterRelations) HasModelType() bool {
	if o != nil && !isNil(o.ModelType) {
		return true
	}

	return false
}

// SetModelType gets a reference to the given PresenterRelationsModelType and assigns it to the ModelType field.
func (o *PresenterRelations) SetModelType(v PresenterRelationsModelType) {
	o.ModelType = &v
}

func (o PresenterRelations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Programs) {
		toSerialize["programs"] = o.Programs
	}
	if !isNil(o.Broadcasts) {
		toSerialize["broadcasts"] = o.Broadcasts
	}
	if !isNil(o.ModelType) {
		toSerialize["model_type"] = o.ModelType
	}
	return json.Marshal(toSerialize)
}

type NullablePresenterRelations struct {
	value *PresenterRelations
	isSet bool
}

func (v NullablePresenterRelations) Get() *PresenterRelations {
	return v.value
}

func (v *NullablePresenterRelations) Set(val *PresenterRelations) {
	v.value = val
	v.isSet = true
}

func (v NullablePresenterRelations) IsSet() bool {
	return v.isSet
}

func (v *NullablePresenterRelations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePresenterRelations(val *PresenterRelations) *NullablePresenterRelations {
	return &NullablePresenterRelations{value: val, isSet: true}
}

func (v NullablePresenterRelations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePresenterRelations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


