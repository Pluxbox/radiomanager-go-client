/*
RadioManager

Testing PresenterApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package radiomanagerclient

import (
    "context"
    "github.com/stretchr/testify/assert"
    "github.com/stretchr/testify/require"
    "testing"
    openapiclient "./openapi"
)

func Test_radiomanagerclient_PresenterApiService(t *testing.T) {

    configuration := openapiclient.NewConfiguration()
    apiClient := openapiclient.NewAPIClient(configuration)

    t.Run("Test PresenterApiService CreatePresenter", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.PresenterApi.CreatePresenter(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test PresenterApiService DeletePresenterById", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var id int64

        resp, httpRes, err := apiClient.PresenterApi.DeletePresenterById(context.Background(), id).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test PresenterApiService GetPresenterById", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var id int64

        resp, httpRes, err := apiClient.PresenterApi.GetPresenterById(context.Background(), id).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test PresenterApiService ListPresenters", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.PresenterApi.ListPresenters(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test PresenterApiService UpdatePresenterByID", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var id int64

        resp, httpRes, err := apiClient.PresenterApi.UpdatePresenterByID(context.Background(), id).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

}
