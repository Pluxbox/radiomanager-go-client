/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
	"time"
)

// ImportItemAllOf struct for ImportItemAllOf
type ImportItemAllOf struct {
	ModelTypeId int64 `json:"model_type_id"`
	ExternalId string `json:"external_id"`
	FieldValues map[string]interface{} `json:"field_values,omitempty"`
	Title *string `json:"title,omitempty"`
	Duration *int64 `json:"duration,omitempty"`
	Start *time.Time `json:"start,omitempty"`
	Recommended *bool `json:"recommended,omitempty"`
	StaticStart *bool `json:"static_start,omitempty"`
	Details *string `json:"details,omitempty"`
	Contacts []int32 `json:"contacts,omitempty"`
	Tags []int32 `json:"tags,omitempty"`
	BroadcastId *int32 `json:"broadcast_id,omitempty"`
}

// NewImportItemAllOf instantiates a new ImportItemAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportItemAllOf(modelTypeId int64, externalId string) *ImportItemAllOf {
	this := ImportItemAllOf{}
	this.ModelTypeId = modelTypeId
	this.ExternalId = externalId
	return &this
}

// NewImportItemAllOfWithDefaults instantiates a new ImportItemAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportItemAllOfWithDefaults() *ImportItemAllOf {
	this := ImportItemAllOf{}
	return &this
}

// GetModelTypeId returns the ModelTypeId field value
func (o *ImportItemAllOf) GetModelTypeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ModelTypeId
}

// GetModelTypeIdOk returns a tuple with the ModelTypeId field value
// and a boolean to check if the value has been set.
func (o *ImportItemAllOf) GetModelTypeIdOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ModelTypeId, true
}

// SetModelTypeId sets field value
func (o *ImportItemAllOf) SetModelTypeId(v int64) {
	o.ModelTypeId = v
}

// GetExternalId returns the ExternalId field value
func (o *ImportItemAllOf) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *ImportItemAllOf) GetExternalIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *ImportItemAllOf) SetExternalId(v string) {
	o.ExternalId = v
}

// GetFieldValues returns the FieldValues field value if set, zero value otherwise.
func (o *ImportItemAllOf) GetFieldValues() map[string]interface{} {
	if o == nil || isNil(o.FieldValues) {
		var ret map[string]interface{}
		return ret
	}
	return o.FieldValues
}

// GetFieldValuesOk returns a tuple with the FieldValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportItemAllOf) GetFieldValuesOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FieldValues) {
    return map[string]interface{}{}, false
	}
	return o.FieldValues, true
}

// HasFieldValues returns a boolean if a field has been set.
func (o *ImportItemAllOf) HasFieldValues() bool {
	if o != nil && !isNil(o.FieldValues) {
		return true
	}

	return false
}

// SetFieldValues gets a reference to the given map[string]interface{} and assigns it to the FieldValues field.
func (o *ImportItemAllOf) SetFieldValues(v map[string]interface{}) {
	o.FieldValues = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ImportItemAllOf) GetTitle() string {
	if o == nil || isNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportItemAllOf) GetTitleOk() (*string, bool) {
	if o == nil || isNil(o.Title) {
    return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ImportItemAllOf) HasTitle() bool {
	if o != nil && !isNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ImportItemAllOf) SetTitle(v string) {
	o.Title = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *ImportItemAllOf) GetDuration() int64 {
	if o == nil || isNil(o.Duration) {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportItemAllOf) GetDurationOk() (*int64, bool) {
	if o == nil || isNil(o.Duration) {
    return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *ImportItemAllOf) HasDuration() bool {
	if o != nil && !isNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *ImportItemAllOf) SetDuration(v int64) {
	o.Duration = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *ImportItemAllOf) GetStart() time.Time {
	if o == nil || isNil(o.Start) {
		var ret time.Time
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportItemAllOf) GetStartOk() (*time.Time, bool) {
	if o == nil || isNil(o.Start) {
    return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *ImportItemAllOf) HasStart() bool {
	if o != nil && !isNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given time.Time and assigns it to the Start field.
func (o *ImportItemAllOf) SetStart(v time.Time) {
	o.Start = &v
}

// GetRecommended returns the Recommended field value if set, zero value otherwise.
func (o *ImportItemAllOf) GetRecommended() bool {
	if o == nil || isNil(o.Recommended) {
		var ret bool
		return ret
	}
	return *o.Recommended
}

// GetRecommendedOk returns a tuple with the Recommended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportItemAllOf) GetRecommendedOk() (*bool, bool) {
	if o == nil || isNil(o.Recommended) {
    return nil, false
	}
	return o.Recommended, true
}

// HasRecommended returns a boolean if a field has been set.
func (o *ImportItemAllOf) HasRecommended() bool {
	if o != nil && !isNil(o.Recommended) {
		return true
	}

	return false
}

// SetRecommended gets a reference to the given bool and assigns it to the Recommended field.
func (o *ImportItemAllOf) SetRecommended(v bool) {
	o.Recommended = &v
}

// GetStaticStart returns the StaticStart field value if set, zero value otherwise.
func (o *ImportItemAllOf) GetStaticStart() bool {
	if o == nil || isNil(o.StaticStart) {
		var ret bool
		return ret
	}
	return *o.StaticStart
}

// GetStaticStartOk returns a tuple with the StaticStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportItemAllOf) GetStaticStartOk() (*bool, bool) {
	if o == nil || isNil(o.StaticStart) {
    return nil, false
	}
	return o.StaticStart, true
}

// HasStaticStart returns a boolean if a field has been set.
func (o *ImportItemAllOf) HasStaticStart() bool {
	if o != nil && !isNil(o.StaticStart) {
		return true
	}

	return false
}

// SetStaticStart gets a reference to the given bool and assigns it to the StaticStart field.
func (o *ImportItemAllOf) SetStaticStart(v bool) {
	o.StaticStart = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *ImportItemAllOf) GetDetails() string {
	if o == nil || isNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportItemAllOf) GetDetailsOk() (*string, bool) {
	if o == nil || isNil(o.Details) {
    return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *ImportItemAllOf) HasDetails() bool {
	if o != nil && !isNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *ImportItemAllOf) SetDetails(v string) {
	o.Details = &v
}

// GetContacts returns the Contacts field value if set, zero value otherwise.
func (o *ImportItemAllOf) GetContacts() []int32 {
	if o == nil || isNil(o.Contacts) {
		var ret []int32
		return ret
	}
	return o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportItemAllOf) GetContactsOk() ([]int32, bool) {
	if o == nil || isNil(o.Contacts) {
    return nil, false
	}
	return o.Contacts, true
}

// HasContacts returns a boolean if a field has been set.
func (o *ImportItemAllOf) HasContacts() bool {
	if o != nil && !isNil(o.Contacts) {
		return true
	}

	return false
}

// SetContacts gets a reference to the given []int32 and assigns it to the Contacts field.
func (o *ImportItemAllOf) SetContacts(v []int32) {
	o.Contacts = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ImportItemAllOf) GetTags() []int32 {
	if o == nil || isNil(o.Tags) {
		var ret []int32
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportItemAllOf) GetTagsOk() ([]int32, bool) {
	if o == nil || isNil(o.Tags) {
    return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ImportItemAllOf) HasTags() bool {
	if o != nil && !isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []int32 and assigns it to the Tags field.
func (o *ImportItemAllOf) SetTags(v []int32) {
	o.Tags = v
}

// GetBroadcastId returns the BroadcastId field value if set, zero value otherwise.
func (o *ImportItemAllOf) GetBroadcastId() int32 {
	if o == nil || isNil(o.BroadcastId) {
		var ret int32
		return ret
	}
	return *o.BroadcastId
}

// GetBroadcastIdOk returns a tuple with the BroadcastId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportItemAllOf) GetBroadcastIdOk() (*int32, bool) {
	if o == nil || isNil(o.BroadcastId) {
    return nil, false
	}
	return o.BroadcastId, true
}

// HasBroadcastId returns a boolean if a field has been set.
func (o *ImportItemAllOf) HasBroadcastId() bool {
	if o != nil && !isNil(o.BroadcastId) {
		return true
	}

	return false
}

// SetBroadcastId gets a reference to the given int32 and assigns it to the BroadcastId field.
func (o *ImportItemAllOf) SetBroadcastId(v int32) {
	o.BroadcastId = &v
}

func (o ImportItemAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["model_type_id"] = o.ModelTypeId
	}
	if true {
		toSerialize["external_id"] = o.ExternalId
	}
	if !isNil(o.FieldValues) {
		toSerialize["field_values"] = o.FieldValues
	}
	if !isNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !isNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !isNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !isNil(o.Recommended) {
		toSerialize["recommended"] = o.Recommended
	}
	if !isNil(o.StaticStart) {
		toSerialize["static_start"] = o.StaticStart
	}
	if !isNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !isNil(o.Contacts) {
		toSerialize["contacts"] = o.Contacts
	}
	if !isNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !isNil(o.BroadcastId) {
		toSerialize["broadcast_id"] = o.BroadcastId
	}
	return json.Marshal(toSerialize)
}

type NullableImportItemAllOf struct {
	value *ImportItemAllOf
	isSet bool
}

func (v NullableImportItemAllOf) Get() *ImportItemAllOf {
	return v.value
}

func (v *NullableImportItemAllOf) Set(val *ImportItemAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableImportItemAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableImportItemAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportItemAllOf(val *ImportItemAllOf) *NullableImportItemAllOf {
	return &NullableImportItemAllOf{value: val, isSet: true}
}

func (v NullableImportItemAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportItemAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


