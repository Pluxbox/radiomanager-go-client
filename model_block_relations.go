/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
)

// BlockRelations struct for BlockRelations
type BlockRelations struct {
	Items *BlockRelationsItems `json:"items,omitempty"`
	Broadcast *BlockRelationsBroadcast `json:"broadcast,omitempty"`
	Program *BlockRelationsProgram `json:"program,omitempty"`
}

// NewBlockRelations instantiates a new BlockRelations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockRelations() *BlockRelations {
	this := BlockRelations{}
	return &this
}

// NewBlockRelationsWithDefaults instantiates a new BlockRelations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockRelationsWithDefaults() *BlockRelations {
	this := BlockRelations{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *BlockRelations) GetItems() BlockRelationsItems {
	if o == nil || isNil(o.Items) {
		var ret BlockRelationsItems
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockRelations) GetItemsOk() (*BlockRelationsItems, bool) {
	if o == nil || isNil(o.Items) {
    return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *BlockRelations) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given BlockRelationsItems and assigns it to the Items field.
func (o *BlockRelations) SetItems(v BlockRelationsItems) {
	o.Items = &v
}

// GetBroadcast returns the Broadcast field value if set, zero value otherwise.
func (o *BlockRelations) GetBroadcast() BlockRelationsBroadcast {
	if o == nil || isNil(o.Broadcast) {
		var ret BlockRelationsBroadcast
		return ret
	}
	return *o.Broadcast
}

// GetBroadcastOk returns a tuple with the Broadcast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockRelations) GetBroadcastOk() (*BlockRelationsBroadcast, bool) {
	if o == nil || isNil(o.Broadcast) {
    return nil, false
	}
	return o.Broadcast, true
}

// HasBroadcast returns a boolean if a field has been set.
func (o *BlockRelations) HasBroadcast() bool {
	if o != nil && !isNil(o.Broadcast) {
		return true
	}

	return false
}

// SetBroadcast gets a reference to the given BlockRelationsBroadcast and assigns it to the Broadcast field.
func (o *BlockRelations) SetBroadcast(v BlockRelationsBroadcast) {
	o.Broadcast = &v
}

// GetProgram returns the Program field value if set, zero value otherwise.
func (o *BlockRelations) GetProgram() BlockRelationsProgram {
	if o == nil || isNil(o.Program) {
		var ret BlockRelationsProgram
		return ret
	}
	return *o.Program
}

// GetProgramOk returns a tuple with the Program field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockRelations) GetProgramOk() (*BlockRelationsProgram, bool) {
	if o == nil || isNil(o.Program) {
    return nil, false
	}
	return o.Program, true
}

// HasProgram returns a boolean if a field has been set.
func (o *BlockRelations) HasProgram() bool {
	if o != nil && !isNil(o.Program) {
		return true
	}

	return false
}

// SetProgram gets a reference to the given BlockRelationsProgram and assigns it to the Program field.
func (o *BlockRelations) SetProgram(v BlockRelationsProgram) {
	o.Program = &v
}

func (o BlockRelations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !isNil(o.Broadcast) {
		toSerialize["broadcast"] = o.Broadcast
	}
	if !isNil(o.Program) {
		toSerialize["program"] = o.Program
	}
	return json.Marshal(toSerialize)
}

type NullableBlockRelations struct {
	value *BlockRelations
	isSet bool
}

func (v NullableBlockRelations) Get() *BlockRelations {
	return v.value
}

func (v *NullableBlockRelations) Set(val *BlockRelations) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockRelations) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockRelations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockRelations(val *BlockRelations) *NullableBlockRelations {
	return &NullableBlockRelations{value: val, isSet: true}
}

func (v NullableBlockRelations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockRelations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


