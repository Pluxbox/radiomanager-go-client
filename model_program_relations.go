/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
)

// ProgramRelations struct for ProgramRelations
type ProgramRelations struct {
	Genre *BroadcastRelationsGenre `json:"genre,omitempty"`
	Items *ProgramRelationsItems `json:"items,omitempty"`
	Blocks *ProgramRelationsBlocks `json:"blocks,omitempty"`
	Broadcasts *ProgramRelationsBroadcasts `json:"broadcasts,omitempty"`
	Presenters *ProgramRelationsPresenters `json:"presenters,omitempty"`
	Tags *ProgramRelationsTags `json:"tags,omitempty"`
	ModelType *BroadcastRelationsModelType `json:"model_type,omitempty"`
	Group *BroadcastRelationsGroup `json:"group,omitempty"`
}

// NewProgramRelations instantiates a new ProgramRelations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramRelations() *ProgramRelations {
	this := ProgramRelations{}
	return &this
}

// NewProgramRelationsWithDefaults instantiates a new ProgramRelations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramRelationsWithDefaults() *ProgramRelations {
	this := ProgramRelations{}
	return &this
}

// GetGenre returns the Genre field value if set, zero value otherwise.
func (o *ProgramRelations) GetGenre() BroadcastRelationsGenre {
	if o == nil || isNil(o.Genre) {
		var ret BroadcastRelationsGenre
		return ret
	}
	return *o.Genre
}

// GetGenreOk returns a tuple with the Genre field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRelations) GetGenreOk() (*BroadcastRelationsGenre, bool) {
	if o == nil || isNil(o.Genre) {
    return nil, false
	}
	return o.Genre, true
}

// HasGenre returns a boolean if a field has been set.
func (o *ProgramRelations) HasGenre() bool {
	if o != nil && !isNil(o.Genre) {
		return true
	}

	return false
}

// SetGenre gets a reference to the given BroadcastRelationsGenre and assigns it to the Genre field.
func (o *ProgramRelations) SetGenre(v BroadcastRelationsGenre) {
	o.Genre = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ProgramRelations) GetItems() ProgramRelationsItems {
	if o == nil || isNil(o.Items) {
		var ret ProgramRelationsItems
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRelations) GetItemsOk() (*ProgramRelationsItems, bool) {
	if o == nil || isNil(o.Items) {
    return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ProgramRelations) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given ProgramRelationsItems and assigns it to the Items field.
func (o *ProgramRelations) SetItems(v ProgramRelationsItems) {
	o.Items = &v
}

// GetBlocks returns the Blocks field value if set, zero value otherwise.
func (o *ProgramRelations) GetBlocks() ProgramRelationsBlocks {
	if o == nil || isNil(o.Blocks) {
		var ret ProgramRelationsBlocks
		return ret
	}
	return *o.Blocks
}

// GetBlocksOk returns a tuple with the Blocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRelations) GetBlocksOk() (*ProgramRelationsBlocks, bool) {
	if o == nil || isNil(o.Blocks) {
    return nil, false
	}
	return o.Blocks, true
}

// HasBlocks returns a boolean if a field has been set.
func (o *ProgramRelations) HasBlocks() bool {
	if o != nil && !isNil(o.Blocks) {
		return true
	}

	return false
}

// SetBlocks gets a reference to the given ProgramRelationsBlocks and assigns it to the Blocks field.
func (o *ProgramRelations) SetBlocks(v ProgramRelationsBlocks) {
	o.Blocks = &v
}

// GetBroadcasts returns the Broadcasts field value if set, zero value otherwise.
func (o *ProgramRelations) GetBroadcasts() ProgramRelationsBroadcasts {
	if o == nil || isNil(o.Broadcasts) {
		var ret ProgramRelationsBroadcasts
		return ret
	}
	return *o.Broadcasts
}

// GetBroadcastsOk returns a tuple with the Broadcasts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRelations) GetBroadcastsOk() (*ProgramRelationsBroadcasts, bool) {
	if o == nil || isNil(o.Broadcasts) {
    return nil, false
	}
	return o.Broadcasts, true
}

// HasBroadcasts returns a boolean if a field has been set.
func (o *ProgramRelations) HasBroadcasts() bool {
	if o != nil && !isNil(o.Broadcasts) {
		return true
	}

	return false
}

// SetBroadcasts gets a reference to the given ProgramRelationsBroadcasts and assigns it to the Broadcasts field.
func (o *ProgramRelations) SetBroadcasts(v ProgramRelationsBroadcasts) {
	o.Broadcasts = &v
}

// GetPresenters returns the Presenters field value if set, zero value otherwise.
func (o *ProgramRelations) GetPresenters() ProgramRelationsPresenters {
	if o == nil || isNil(o.Presenters) {
		var ret ProgramRelationsPresenters
		return ret
	}
	return *o.Presenters
}

// GetPresentersOk returns a tuple with the Presenters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRelations) GetPresentersOk() (*ProgramRelationsPresenters, bool) {
	if o == nil || isNil(o.Presenters) {
    return nil, false
	}
	return o.Presenters, true
}

// HasPresenters returns a boolean if a field has been set.
func (o *ProgramRelations) HasPresenters() bool {
	if o != nil && !isNil(o.Presenters) {
		return true
	}

	return false
}

// SetPresenters gets a reference to the given ProgramRelationsPresenters and assigns it to the Presenters field.
func (o *ProgramRelations) SetPresenters(v ProgramRelationsPresenters) {
	o.Presenters = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ProgramRelations) GetTags() ProgramRelationsTags {
	if o == nil || isNil(o.Tags) {
		var ret ProgramRelationsTags
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRelations) GetTagsOk() (*ProgramRelationsTags, bool) {
	if o == nil || isNil(o.Tags) {
    return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ProgramRelations) HasTags() bool {
	if o != nil && !isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given ProgramRelationsTags and assigns it to the Tags field.
func (o *ProgramRelations) SetTags(v ProgramRelationsTags) {
	o.Tags = &v
}

// GetModelType returns the ModelType field value if set, zero value otherwise.
func (o *ProgramRelations) GetModelType() BroadcastRelationsModelType {
	if o == nil || isNil(o.ModelType) {
		var ret BroadcastRelationsModelType
		return ret
	}
	return *o.ModelType
}

// GetModelTypeOk returns a tuple with the ModelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRelations) GetModelTypeOk() (*BroadcastRelationsModelType, bool) {
	if o == nil || isNil(o.ModelType) {
    return nil, false
	}
	return o.ModelType, true
}

// HasModelType returns a boolean if a field has been set.
func (o *ProgramRelations) HasModelType() bool {
	if o != nil && !isNil(o.ModelType) {
		return true
	}

	return false
}

// SetModelType gets a reference to the given BroadcastRelationsModelType and assigns it to the ModelType field.
func (o *ProgramRelations) SetModelType(v BroadcastRelationsModelType) {
	o.ModelType = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *ProgramRelations) GetGroup() BroadcastRelationsGroup {
	if o == nil || isNil(o.Group) {
		var ret BroadcastRelationsGroup
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRelations) GetGroupOk() (*BroadcastRelationsGroup, bool) {
	if o == nil || isNil(o.Group) {
    return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *ProgramRelations) HasGroup() bool {
	if o != nil && !isNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given BroadcastRelationsGroup and assigns it to the Group field.
func (o *ProgramRelations) SetGroup(v BroadcastRelationsGroup) {
	o.Group = &v
}

func (o ProgramRelations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Genre) {
		toSerialize["genre"] = o.Genre
	}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !isNil(o.Blocks) {
		toSerialize["blocks"] = o.Blocks
	}
	if !isNil(o.Broadcasts) {
		toSerialize["broadcasts"] = o.Broadcasts
	}
	if !isNil(o.Presenters) {
		toSerialize["presenters"] = o.Presenters
	}
	if !isNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !isNil(o.ModelType) {
		toSerialize["model_type"] = o.ModelType
	}
	if !isNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	return json.Marshal(toSerialize)
}

type NullableProgramRelations struct {
	value *ProgramRelations
	isSet bool
}

func (v NullableProgramRelations) Get() *ProgramRelations {
	return v.value
}

func (v *NullableProgramRelations) Set(val *ProgramRelations) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramRelations) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramRelations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramRelations(val *ProgramRelations) *NullableProgramRelations {
	return &NullableProgramRelations{value: val, isSet: true}
}

func (v NullableProgramRelations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramRelations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


