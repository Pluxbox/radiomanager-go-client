/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
)

// InlineResponse202 struct for InlineResponse202
type InlineResponse202 struct {
	// Describes whatever has succeeded
	Success *string `json:"success,omitempty"`
}

// NewInlineResponse202 instantiates a new InlineResponse202 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse202() *InlineResponse202 {
	this := InlineResponse202{}
	return &this
}

// NewInlineResponse202WithDefaults instantiates a new InlineResponse202 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse202WithDefaults() *InlineResponse202 {
	this := InlineResponse202{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *InlineResponse202) GetSuccess() string {
	if o == nil || isNil(o.Success) {
		var ret string
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse202) GetSuccessOk() (*string, bool) {
	if o == nil || isNil(o.Success) {
    return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *InlineResponse202) HasSuccess() bool {
	if o != nil && !isNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given string and assigns it to the Success field.
func (o *InlineResponse202) SetSuccess(v string) {
	o.Success = &v
}

func (o InlineResponse202) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse202 struct {
	value *InlineResponse202
	isSet bool
}

func (v NullableInlineResponse202) Get() *InlineResponse202 {
	return v.value
}

func (v *NullableInlineResponse202) Set(val *InlineResponse202) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse202) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse202) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse202(val *InlineResponse202) *NullableInlineResponse202 {
	return &NullableInlineResponse202{value: val, isSet: true}
}

func (v NullableInlineResponse202) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse202) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


