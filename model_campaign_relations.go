/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
)

// CampaignRelations struct for CampaignRelations
type CampaignRelations struct {
	Items *CampaignRelationsItems `json:"items,omitempty"`
	ModelType *BroadcastRelationsModelType `json:"model_type,omitempty"`
}

// NewCampaignRelations instantiates a new CampaignRelations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignRelations() *CampaignRelations {
	this := CampaignRelations{}
	return &this
}

// NewCampaignRelationsWithDefaults instantiates a new CampaignRelations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignRelationsWithDefaults() *CampaignRelations {
	this := CampaignRelations{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *CampaignRelations) GetItems() CampaignRelationsItems {
	if o == nil || isNil(o.Items) {
		var ret CampaignRelationsItems
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignRelations) GetItemsOk() (*CampaignRelationsItems, bool) {
	if o == nil || isNil(o.Items) {
    return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *CampaignRelations) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given CampaignRelationsItems and assigns it to the Items field.
func (o *CampaignRelations) SetItems(v CampaignRelationsItems) {
	o.Items = &v
}

// GetModelType returns the ModelType field value if set, zero value otherwise.
func (o *CampaignRelations) GetModelType() BroadcastRelationsModelType {
	if o == nil || isNil(o.ModelType) {
		var ret BroadcastRelationsModelType
		return ret
	}
	return *o.ModelType
}

// GetModelTypeOk returns a tuple with the ModelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignRelations) GetModelTypeOk() (*BroadcastRelationsModelType, bool) {
	if o == nil || isNil(o.ModelType) {
    return nil, false
	}
	return o.ModelType, true
}

// HasModelType returns a boolean if a field has been set.
func (o *CampaignRelations) HasModelType() bool {
	if o != nil && !isNil(o.ModelType) {
		return true
	}

	return false
}

// SetModelType gets a reference to the given BroadcastRelationsModelType and assigns it to the ModelType field.
func (o *CampaignRelations) SetModelType(v BroadcastRelationsModelType) {
	o.ModelType = &v
}

func (o CampaignRelations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !isNil(o.ModelType) {
		toSerialize["model_type"] = o.ModelType
	}
	return json.Marshal(toSerialize)
}

type NullableCampaignRelations struct {
	value *CampaignRelations
	isSet bool
}

func (v NullableCampaignRelations) Get() *CampaignRelations {
	return v.value
}

func (v *NullableCampaignRelations) Set(val *CampaignRelations) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignRelations) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignRelations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignRelations(val *CampaignRelations) *NullableCampaignRelations {
	return &NullableCampaignRelations{value: val, isSet: true}
}

func (v NullableCampaignRelations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignRelations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


