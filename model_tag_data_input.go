/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
)

// TagDataInput struct for TagDataInput
type TagDataInput struct {
	Name string `json:"name"`
}

// NewTagDataInput instantiates a new TagDataInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagDataInput(name string) *TagDataInput {
	this := TagDataInput{}
	this.Name = name
	return &this
}

// NewTagDataInputWithDefaults instantiates a new TagDataInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagDataInputWithDefaults() *TagDataInput {
	this := TagDataInput{}
	return &this
}

// GetName returns the Name field value
func (o *TagDataInput) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TagDataInput) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TagDataInput) SetName(v string) {
	o.Name = v
}

func (o TagDataInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableTagDataInput struct {
	value *TagDataInput
	isSet bool
}

func (v NullableTagDataInput) Get() *TagDataInput {
	return v.value
}

func (v *NullableTagDataInput) Set(val *TagDataInput) {
	v.value = val
	v.isSet = true
}

func (v NullableTagDataInput) IsSet() bool {
	return v.isSet
}

func (v *NullableTagDataInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagDataInput(val *TagDataInput) *NullableTagDataInput {
	return &NullableTagDataInput{value: val, isSet: true}
}

func (v NullableTagDataInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagDataInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


