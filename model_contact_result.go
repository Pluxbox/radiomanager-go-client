/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
)

// ContactResult struct for ContactResult
type ContactResult struct {
	Id *int64 `json:"id,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	ExternalStationId *int64 `json:"_external_station_id,omitempty"`
	ModelTypeId int64 `json:"model_type_id"`
	FieldValues map[string]interface{} `json:"field_values,omitempty"`
	Email *string `json:"email,omitempty"`
	Firstname string `json:"firstname"`
	Lastname string `json:"lastname"`
	Phone *string `json:"phone,omitempty"`
	Tags ContactRelationsTags `json:"tags"`
	Items *ContactRelationsItems `json:"items,omitempty"`
	ModelType *BroadcastRelationsModelType `json:"model_type,omitempty"`
}

// NewContactResult instantiates a new ContactResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactResult(modelTypeId int64, firstname string, lastname string, tags ContactRelationsTags) *ContactResult {
	this := ContactResult{}
	this.ModelTypeId = modelTypeId
	this.Firstname = firstname
	this.Lastname = lastname
	this.Tags = tags
	return &this
}

// NewContactResultWithDefaults instantiates a new ContactResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactResultWithDefaults() *ContactResult {
	this := ContactResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ContactResult) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactResult) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ContactResult) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ContactResult) SetId(v int64) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ContactResult) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactResult) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ContactResult) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ContactResult) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ContactResult) GetUpdatedAt() time.Time {
	if o == nil || isNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactResult) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.UpdatedAt) {
    return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ContactResult) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ContactResult) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ContactResult) GetDeletedAt() time.Time {
	if o == nil || isNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactResult) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.DeletedAt) {
    return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ContactResult) HasDeletedAt() bool {
	if o != nil && !isNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *ContactResult) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetExternalStationId returns the ExternalStationId field value if set, zero value otherwise.
func (o *ContactResult) GetExternalStationId() int64 {
	if o == nil || isNil(o.ExternalStationId) {
		var ret int64
		return ret
	}
	return *o.ExternalStationId
}

// GetExternalStationIdOk returns a tuple with the ExternalStationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactResult) GetExternalStationIdOk() (*int64, bool) {
	if o == nil || isNil(o.ExternalStationId) {
    return nil, false
	}
	return o.ExternalStationId, true
}

// HasExternalStationId returns a boolean if a field has been set.
func (o *ContactResult) HasExternalStationId() bool {
	if o != nil && !isNil(o.ExternalStationId) {
		return true
	}

	return false
}

// SetExternalStationId gets a reference to the given int64 and assigns it to the ExternalStationId field.
func (o *ContactResult) SetExternalStationId(v int64) {
	o.ExternalStationId = &v
}

// GetModelTypeId returns the ModelTypeId field value
func (o *ContactResult) GetModelTypeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ModelTypeId
}

// GetModelTypeIdOk returns a tuple with the ModelTypeId field value
// and a boolean to check if the value has been set.
func (o *ContactResult) GetModelTypeIdOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ModelTypeId, true
}

// SetModelTypeId sets field value
func (o *ContactResult) SetModelTypeId(v int64) {
	o.ModelTypeId = v
}

// GetFieldValues returns the FieldValues field value if set, zero value otherwise.
func (o *ContactResult) GetFieldValues() map[string]interface{} {
	if o == nil || isNil(o.FieldValues) {
		var ret map[string]interface{}
		return ret
	}
	return o.FieldValues
}

// GetFieldValuesOk returns a tuple with the FieldValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactResult) GetFieldValuesOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FieldValues) {
    return map[string]interface{}{}, false
	}
	return o.FieldValues, true
}

// HasFieldValues returns a boolean if a field has been set.
func (o *ContactResult) HasFieldValues() bool {
	if o != nil && !isNil(o.FieldValues) {
		return true
	}

	return false
}

// SetFieldValues gets a reference to the given map[string]interface{} and assigns it to the FieldValues field.
func (o *ContactResult) SetFieldValues(v map[string]interface{}) {
	o.FieldValues = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ContactResult) GetEmail() string {
	if o == nil || isNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactResult) GetEmailOk() (*string, bool) {
	if o == nil || isNil(o.Email) {
    return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ContactResult) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ContactResult) SetEmail(v string) {
	o.Email = &v
}

// GetFirstname returns the Firstname field value
func (o *ContactResult) GetFirstname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Firstname
}

// GetFirstnameOk returns a tuple with the Firstname field value
// and a boolean to check if the value has been set.
func (o *ContactResult) GetFirstnameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Firstname, true
}

// SetFirstname sets field value
func (o *ContactResult) SetFirstname(v string) {
	o.Firstname = v
}

// GetLastname returns the Lastname field value
func (o *ContactResult) GetLastname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Lastname
}

// GetLastnameOk returns a tuple with the Lastname field value
// and a boolean to check if the value has been set.
func (o *ContactResult) GetLastnameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Lastname, true
}

// SetLastname sets field value
func (o *ContactResult) SetLastname(v string) {
	o.Lastname = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *ContactResult) GetPhone() string {
	if o == nil || isNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactResult) GetPhoneOk() (*string, bool) {
	if o == nil || isNil(o.Phone) {
    return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *ContactResult) HasPhone() bool {
	if o != nil && !isNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *ContactResult) SetPhone(v string) {
	o.Phone = &v
}

// GetTags returns the Tags field value
func (o *ContactResult) GetTags() ContactRelationsTags {
	if o == nil {
		var ret ContactRelationsTags
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *ContactResult) GetTagsOk() (*ContactRelationsTags, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *ContactResult) SetTags(v ContactRelationsTags) {
	o.Tags = v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ContactResult) GetItems() ContactRelationsItems {
	if o == nil || isNil(o.Items) {
		var ret ContactRelationsItems
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactResult) GetItemsOk() (*ContactRelationsItems, bool) {
	if o == nil || isNil(o.Items) {
    return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ContactResult) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given ContactRelationsItems and assigns it to the Items field.
func (o *ContactResult) SetItems(v ContactRelationsItems) {
	o.Items = &v
}

// GetModelType returns the ModelType field value if set, zero value otherwise.
func (o *ContactResult) GetModelType() BroadcastRelationsModelType {
	if o == nil || isNil(o.ModelType) {
		var ret BroadcastRelationsModelType
		return ret
	}
	return *o.ModelType
}

// GetModelTypeOk returns a tuple with the ModelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactResult) GetModelTypeOk() (*BroadcastRelationsModelType, bool) {
	if o == nil || isNil(o.ModelType) {
    return nil, false
	}
	return o.ModelType, true
}

// HasModelType returns a boolean if a field has been set.
func (o *ContactResult) HasModelType() bool {
	if o != nil && !isNil(o.ModelType) {
		return true
	}

	return false
}

// SetModelType gets a reference to the given BroadcastRelationsModelType and assigns it to the ModelType field.
func (o *ContactResult) SetModelType(v BroadcastRelationsModelType) {
	o.ModelType = &v
}

func (o ContactResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !isNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !isNil(o.ExternalStationId) {
		toSerialize["_external_station_id"] = o.ExternalStationId
	}
	if true {
		toSerialize["model_type_id"] = o.ModelTypeId
	}
	if !isNil(o.FieldValues) {
		toSerialize["field_values"] = o.FieldValues
	}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["firstname"] = o.Firstname
	}
	if true {
		toSerialize["lastname"] = o.Lastname
	}
	if !isNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if true {
		toSerialize["tags"] = o.Tags
	}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !isNil(o.ModelType) {
		toSerialize["model_type"] = o.ModelType
	}
	return json.Marshal(toSerialize)
}

type NullableContactResult struct {
	value *ContactResult
	isSet bool
}

func (v NullableContactResult) Get() *ContactResult {
	return v.value
}

func (v *NullableContactResult) Set(val *ContactResult) {
	v.value = val
	v.isSet = true
}

func (v NullableContactResult) IsSet() bool {
	return v.isSet
}

func (v *NullableContactResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactResult(val *ContactResult) *NullableContactResult {
	return &NullableContactResult{value: val, isSet: true}
}

func (v NullableContactResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


