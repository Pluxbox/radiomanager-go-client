/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
)

// InviteUserData struct for InviteUserData
type InviteUserData struct {
	Email string `json:"email"`
	RoleIds []int32 `json:"role_ids"`
}

// NewInviteUserData instantiates a new InviteUserData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInviteUserData(email string, roleIds []int32) *InviteUserData {
	this := InviteUserData{}
	this.Email = email
	this.RoleIds = roleIds
	return &this
}

// NewInviteUserDataWithDefaults instantiates a new InviteUserData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInviteUserDataWithDefaults() *InviteUserData {
	this := InviteUserData{}
	return &this
}

// GetEmail returns the Email field value
func (o *InviteUserData) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *InviteUserData) GetEmailOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *InviteUserData) SetEmail(v string) {
	o.Email = v
}

// GetRoleIds returns the RoleIds field value
func (o *InviteUserData) GetRoleIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.RoleIds
}

// GetRoleIdsOk returns a tuple with the RoleIds field value
// and a boolean to check if the value has been set.
func (o *InviteUserData) GetRoleIdsOk() ([]int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.RoleIds, true
}

// SetRoleIds sets field value
func (o *InviteUserData) SetRoleIds(v []int32) {
	o.RoleIds = v
}

func (o InviteUserData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["role_ids"] = o.RoleIds
	}
	return json.Marshal(toSerialize)
}

type NullableInviteUserData struct {
	value *InviteUserData
	isSet bool
}

func (v NullableInviteUserData) Get() *InviteUserData {
	return v.value
}

func (v *NullableInviteUserData) Set(val *InviteUserData) {
	v.value = val
	v.isSet = true
}

func (v NullableInviteUserData) IsSet() bool {
	return v.isSet
}

func (v *NullableInviteUserData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInviteUserData(val *InviteUserData) *NullableInviteUserData {
	return &NullableInviteUserData{value: val, isSet: true}
}

func (v NullableInviteUserData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInviteUserData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


