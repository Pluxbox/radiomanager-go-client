/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
)

// PresenterEPGResult struct for PresenterEPGResult
type PresenterEPGResult struct {
	ModelTypeId int64 `json:"model_type_id"`
	FieldValues map[string]interface{} `json:"field_values,omitempty"`
	Firstname *string `json:"firstname,omitempty"`
	Lastname *string `json:"lastname,omitempty"`
	Active *bool `json:"active,omitempty"`
	Name *string `json:"name,omitempty"`
	Id int64 `json:"id"`
	UpdatedAt time.Time `json:"updated_at"`
	CreatedAt time.Time `json:"created_at"`
	DeletedAt time.Time `json:"deleted_at"`
	ExternalStationId *int64 `json:"_external_station_id,omitempty"`
}

// NewPresenterEPGResult instantiates a new PresenterEPGResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPresenterEPGResult(modelTypeId int64, id int64, updatedAt time.Time, createdAt time.Time, deletedAt time.Time) *PresenterEPGResult {
	this := PresenterEPGResult{}
	this.ModelTypeId = modelTypeId
	this.Id = id
	this.UpdatedAt = updatedAt
	this.CreatedAt = createdAt
	this.DeletedAt = deletedAt
	return &this
}

// NewPresenterEPGResultWithDefaults instantiates a new PresenterEPGResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPresenterEPGResultWithDefaults() *PresenterEPGResult {
	this := PresenterEPGResult{}
	return &this
}

// GetModelTypeId returns the ModelTypeId field value
func (o *PresenterEPGResult) GetModelTypeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ModelTypeId
}

// GetModelTypeIdOk returns a tuple with the ModelTypeId field value
// and a boolean to check if the value has been set.
func (o *PresenterEPGResult) GetModelTypeIdOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ModelTypeId, true
}

// SetModelTypeId sets field value
func (o *PresenterEPGResult) SetModelTypeId(v int64) {
	o.ModelTypeId = v
}

// GetFieldValues returns the FieldValues field value if set, zero value otherwise.
func (o *PresenterEPGResult) GetFieldValues() map[string]interface{} {
	if o == nil || isNil(o.FieldValues) {
		var ret map[string]interface{}
		return ret
	}
	return o.FieldValues
}

// GetFieldValuesOk returns a tuple with the FieldValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresenterEPGResult) GetFieldValuesOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FieldValues) {
    return map[string]interface{}{}, false
	}
	return o.FieldValues, true
}

// HasFieldValues returns a boolean if a field has been set.
func (o *PresenterEPGResult) HasFieldValues() bool {
	if o != nil && !isNil(o.FieldValues) {
		return true
	}

	return false
}

// SetFieldValues gets a reference to the given map[string]interface{} and assigns it to the FieldValues field.
func (o *PresenterEPGResult) SetFieldValues(v map[string]interface{}) {
	o.FieldValues = v
}

// GetFirstname returns the Firstname field value if set, zero value otherwise.
func (o *PresenterEPGResult) GetFirstname() string {
	if o == nil || isNil(o.Firstname) {
		var ret string
		return ret
	}
	return *o.Firstname
}

// GetFirstnameOk returns a tuple with the Firstname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresenterEPGResult) GetFirstnameOk() (*string, bool) {
	if o == nil || isNil(o.Firstname) {
    return nil, false
	}
	return o.Firstname, true
}

// HasFirstname returns a boolean if a field has been set.
func (o *PresenterEPGResult) HasFirstname() bool {
	if o != nil && !isNil(o.Firstname) {
		return true
	}

	return false
}

// SetFirstname gets a reference to the given string and assigns it to the Firstname field.
func (o *PresenterEPGResult) SetFirstname(v string) {
	o.Firstname = &v
}

// GetLastname returns the Lastname field value if set, zero value otherwise.
func (o *PresenterEPGResult) GetLastname() string {
	if o == nil || isNil(o.Lastname) {
		var ret string
		return ret
	}
	return *o.Lastname
}

// GetLastnameOk returns a tuple with the Lastname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresenterEPGResult) GetLastnameOk() (*string, bool) {
	if o == nil || isNil(o.Lastname) {
    return nil, false
	}
	return o.Lastname, true
}

// HasLastname returns a boolean if a field has been set.
func (o *PresenterEPGResult) HasLastname() bool {
	if o != nil && !isNil(o.Lastname) {
		return true
	}

	return false
}

// SetLastname gets a reference to the given string and assigns it to the Lastname field.
func (o *PresenterEPGResult) SetLastname(v string) {
	o.Lastname = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *PresenterEPGResult) GetActive() bool {
	if o == nil || isNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresenterEPGResult) GetActiveOk() (*bool, bool) {
	if o == nil || isNil(o.Active) {
    return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *PresenterEPGResult) HasActive() bool {
	if o != nil && !isNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *PresenterEPGResult) SetActive(v bool) {
	o.Active = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PresenterEPGResult) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresenterEPGResult) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PresenterEPGResult) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PresenterEPGResult) SetName(v string) {
	o.Name = &v
}

// GetId returns the Id field value
func (o *PresenterEPGResult) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PresenterEPGResult) GetIdOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PresenterEPGResult) SetId(v int64) {
	o.Id = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PresenterEPGResult) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PresenterEPGResult) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PresenterEPGResult) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PresenterEPGResult) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PresenterEPGResult) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PresenterEPGResult) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDeletedAt returns the DeletedAt field value
func (o *PresenterEPGResult) GetDeletedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value
// and a boolean to check if the value has been set.
func (o *PresenterEPGResult) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DeletedAt, true
}

// SetDeletedAt sets field value
func (o *PresenterEPGResult) SetDeletedAt(v time.Time) {
	o.DeletedAt = v
}

// GetExternalStationId returns the ExternalStationId field value if set, zero value otherwise.
func (o *PresenterEPGResult) GetExternalStationId() int64 {
	if o == nil || isNil(o.ExternalStationId) {
		var ret int64
		return ret
	}
	return *o.ExternalStationId
}

// GetExternalStationIdOk returns a tuple with the ExternalStationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresenterEPGResult) GetExternalStationIdOk() (*int64, bool) {
	if o == nil || isNil(o.ExternalStationId) {
    return nil, false
	}
	return o.ExternalStationId, true
}

// HasExternalStationId returns a boolean if a field has been set.
func (o *PresenterEPGResult) HasExternalStationId() bool {
	if o != nil && !isNil(o.ExternalStationId) {
		return true
	}

	return false
}

// SetExternalStationId gets a reference to the given int64 and assigns it to the ExternalStationId field.
func (o *PresenterEPGResult) SetExternalStationId(v int64) {
	o.ExternalStationId = &v
}

func (o PresenterEPGResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["model_type_id"] = o.ModelTypeId
	}
	if !isNil(o.FieldValues) {
		toSerialize["field_values"] = o.FieldValues
	}
	if !isNil(o.Firstname) {
		toSerialize["firstname"] = o.Firstname
	}
	if !isNil(o.Lastname) {
		toSerialize["lastname"] = o.Lastname
	}
	if !isNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !isNil(o.ExternalStationId) {
		toSerialize["_external_station_id"] = o.ExternalStationId
	}
	return json.Marshal(toSerialize)
}

type NullablePresenterEPGResult struct {
	value *PresenterEPGResult
	isSet bool
}

func (v NullablePresenterEPGResult) Get() *PresenterEPGResult {
	return v.value
}

func (v *NullablePresenterEPGResult) Set(val *PresenterEPGResult) {
	v.value = val
	v.isSet = true
}

func (v NullablePresenterEPGResult) IsSet() bool {
	return v.isSet
}

func (v *NullablePresenterEPGResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePresenterEPGResult(val *PresenterEPGResult) *NullablePresenterEPGResult {
	return &NullablePresenterEPGResult{value: val, isSet: true}
}

func (v NullablePresenterEPGResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePresenterEPGResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


