/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
	"time"
)

// ItemOutputOnly struct for ItemOutputOnly
type ItemOutputOnly struct {
	Id *int64 `json:"id,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	DataModified *int64 `json:"data_modified,omitempty"`
	Order *int64 `json:"order,omitempty"`
	TemplateblockId *int64 `json:"templateblock_id,omitempty"`
	TemplateitemId *int64 `json:"templateitem_id,omitempty"`
	ExternalStationId *int64 `json:"_external_station_id,omitempty"`
}

// NewItemOutputOnly instantiates a new ItemOutputOnly object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemOutputOnly() *ItemOutputOnly {
	this := ItemOutputOnly{}
	return &this
}

// NewItemOutputOnlyWithDefaults instantiates a new ItemOutputOnly object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemOutputOnlyWithDefaults() *ItemOutputOnly {
	this := ItemOutputOnly{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ItemOutputOnly) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOutputOnly) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ItemOutputOnly) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ItemOutputOnly) SetId(v int64) {
	o.Id = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ItemOutputOnly) GetUpdatedAt() time.Time {
	if o == nil || isNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOutputOnly) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.UpdatedAt) {
    return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ItemOutputOnly) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ItemOutputOnly) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ItemOutputOnly) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOutputOnly) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ItemOutputOnly) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ItemOutputOnly) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ItemOutputOnly) GetDeletedAt() time.Time {
	if o == nil || isNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOutputOnly) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.DeletedAt) {
    return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ItemOutputOnly) HasDeletedAt() bool {
	if o != nil && !isNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *ItemOutputOnly) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetDataModified returns the DataModified field value if set, zero value otherwise.
func (o *ItemOutputOnly) GetDataModified() int64 {
	if o == nil || isNil(o.DataModified) {
		var ret int64
		return ret
	}
	return *o.DataModified
}

// GetDataModifiedOk returns a tuple with the DataModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOutputOnly) GetDataModifiedOk() (*int64, bool) {
	if o == nil || isNil(o.DataModified) {
    return nil, false
	}
	return o.DataModified, true
}

// HasDataModified returns a boolean if a field has been set.
func (o *ItemOutputOnly) HasDataModified() bool {
	if o != nil && !isNil(o.DataModified) {
		return true
	}

	return false
}

// SetDataModified gets a reference to the given int64 and assigns it to the DataModified field.
func (o *ItemOutputOnly) SetDataModified(v int64) {
	o.DataModified = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *ItemOutputOnly) GetOrder() int64 {
	if o == nil || isNil(o.Order) {
		var ret int64
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOutputOnly) GetOrderOk() (*int64, bool) {
	if o == nil || isNil(o.Order) {
    return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *ItemOutputOnly) HasOrder() bool {
	if o != nil && !isNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int64 and assigns it to the Order field.
func (o *ItemOutputOnly) SetOrder(v int64) {
	o.Order = &v
}

// GetTemplateblockId returns the TemplateblockId field value if set, zero value otherwise.
func (o *ItemOutputOnly) GetTemplateblockId() int64 {
	if o == nil || isNil(o.TemplateblockId) {
		var ret int64
		return ret
	}
	return *o.TemplateblockId
}

// GetTemplateblockIdOk returns a tuple with the TemplateblockId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOutputOnly) GetTemplateblockIdOk() (*int64, bool) {
	if o == nil || isNil(o.TemplateblockId) {
    return nil, false
	}
	return o.TemplateblockId, true
}

// HasTemplateblockId returns a boolean if a field has been set.
func (o *ItemOutputOnly) HasTemplateblockId() bool {
	if o != nil && !isNil(o.TemplateblockId) {
		return true
	}

	return false
}

// SetTemplateblockId gets a reference to the given int64 and assigns it to the TemplateblockId field.
func (o *ItemOutputOnly) SetTemplateblockId(v int64) {
	o.TemplateblockId = &v
}

// GetTemplateitemId returns the TemplateitemId field value if set, zero value otherwise.
func (o *ItemOutputOnly) GetTemplateitemId() int64 {
	if o == nil || isNil(o.TemplateitemId) {
		var ret int64
		return ret
	}
	return *o.TemplateitemId
}

// GetTemplateitemIdOk returns a tuple with the TemplateitemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOutputOnly) GetTemplateitemIdOk() (*int64, bool) {
	if o == nil || isNil(o.TemplateitemId) {
    return nil, false
	}
	return o.TemplateitemId, true
}

// HasTemplateitemId returns a boolean if a field has been set.
func (o *ItemOutputOnly) HasTemplateitemId() bool {
	if o != nil && !isNil(o.TemplateitemId) {
		return true
	}

	return false
}

// SetTemplateitemId gets a reference to the given int64 and assigns it to the TemplateitemId field.
func (o *ItemOutputOnly) SetTemplateitemId(v int64) {
	o.TemplateitemId = &v
}

// GetExternalStationId returns the ExternalStationId field value if set, zero value otherwise.
func (o *ItemOutputOnly) GetExternalStationId() int64 {
	if o == nil || isNil(o.ExternalStationId) {
		var ret int64
		return ret
	}
	return *o.ExternalStationId
}

// GetExternalStationIdOk returns a tuple with the ExternalStationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemOutputOnly) GetExternalStationIdOk() (*int64, bool) {
	if o == nil || isNil(o.ExternalStationId) {
    return nil, false
	}
	return o.ExternalStationId, true
}

// HasExternalStationId returns a boolean if a field has been set.
func (o *ItemOutputOnly) HasExternalStationId() bool {
	if o != nil && !isNil(o.ExternalStationId) {
		return true
	}

	return false
}

// SetExternalStationId gets a reference to the given int64 and assigns it to the ExternalStationId field.
func (o *ItemOutputOnly) SetExternalStationId(v int64) {
	o.ExternalStationId = &v
}

func (o ItemOutputOnly) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !isNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !isNil(o.DataModified) {
		toSerialize["data_modified"] = o.DataModified
	}
	if !isNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !isNil(o.TemplateblockId) {
		toSerialize["templateblock_id"] = o.TemplateblockId
	}
	if !isNil(o.TemplateitemId) {
		toSerialize["templateitem_id"] = o.TemplateitemId
	}
	if !isNil(o.ExternalStationId) {
		toSerialize["_external_station_id"] = o.ExternalStationId
	}
	return json.Marshal(toSerialize)
}

type NullableItemOutputOnly struct {
	value *ItemOutputOnly
	isSet bool
}

func (v NullableItemOutputOnly) Get() *ItemOutputOnly {
	return v.value
}

func (v *NullableItemOutputOnly) Set(val *ItemOutputOnly) {
	v.value = val
	v.isSet = true
}

func (v NullableItemOutputOnly) IsSet() bool {
	return v.isSet
}

func (v *NullableItemOutputOnly) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemOutputOnly(val *ItemOutputOnly) *NullableItemOutputOnly {
	return &NullableItemOutputOnly{value: val, isSet: true}
}

func (v NullableItemOutputOnly) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemOutputOnly) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


