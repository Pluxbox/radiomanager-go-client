/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
	"time"
)

// ProgramOutputOnly struct for ProgramOutputOnly
type ProgramOutputOnly struct {
	Id int64 `json:"id"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	ExternalStationId *int64 `json:"_external_station_id,omitempty"`
}

// NewProgramOutputOnly instantiates a new ProgramOutputOnly object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramOutputOnly(id int64) *ProgramOutputOnly {
	this := ProgramOutputOnly{}
	this.Id = id
	return &this
}

// NewProgramOutputOnlyWithDefaults instantiates a new ProgramOutputOnly object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramOutputOnlyWithDefaults() *ProgramOutputOnly {
	this := ProgramOutputOnly{}
	return &this
}

// GetId returns the Id field value
func (o *ProgramOutputOnly) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProgramOutputOnly) GetIdOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProgramOutputOnly) SetId(v int64) {
	o.Id = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ProgramOutputOnly) GetUpdatedAt() time.Time {
	if o == nil || isNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramOutputOnly) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.UpdatedAt) {
    return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ProgramOutputOnly) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ProgramOutputOnly) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ProgramOutputOnly) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramOutputOnly) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ProgramOutputOnly) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ProgramOutputOnly) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ProgramOutputOnly) GetDeletedAt() time.Time {
	if o == nil || isNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramOutputOnly) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.DeletedAt) {
    return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ProgramOutputOnly) HasDeletedAt() bool {
	if o != nil && !isNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *ProgramOutputOnly) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetExternalStationId returns the ExternalStationId field value if set, zero value otherwise.
func (o *ProgramOutputOnly) GetExternalStationId() int64 {
	if o == nil || isNil(o.ExternalStationId) {
		var ret int64
		return ret
	}
	return *o.ExternalStationId
}

// GetExternalStationIdOk returns a tuple with the ExternalStationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramOutputOnly) GetExternalStationIdOk() (*int64, bool) {
	if o == nil || isNil(o.ExternalStationId) {
    return nil, false
	}
	return o.ExternalStationId, true
}

// HasExternalStationId returns a boolean if a field has been set.
func (o *ProgramOutputOnly) HasExternalStationId() bool {
	if o != nil && !isNil(o.ExternalStationId) {
		return true
	}

	return false
}

// SetExternalStationId gets a reference to the given int64 and assigns it to the ExternalStationId field.
func (o *ProgramOutputOnly) SetExternalStationId(v int64) {
	o.ExternalStationId = &v
}

func (o ProgramOutputOnly) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !isNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !isNil(o.ExternalStationId) {
		toSerialize["_external_station_id"] = o.ExternalStationId
	}
	return json.Marshal(toSerialize)
}

type NullableProgramOutputOnly struct {
	value *ProgramOutputOnly
	isSet bool
}

func (v NullableProgramOutputOnly) Get() *ProgramOutputOnly {
	return v.value
}

func (v *NullableProgramOutputOnly) Set(val *ProgramOutputOnly) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramOutputOnly) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramOutputOnly) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramOutputOnly(val *ProgramOutputOnly) *NullableProgramOutputOnly {
	return &NullableProgramOutputOnly{value: val, isSet: true}
}

func (v NullableProgramOutputOnly) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramOutputOnly) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


