/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
)

// StationResultStationStartDays struct for StationResultStationStartDays
type StationResultStationStartDays struct {
	Monday *string `json:"monday,omitempty"`
	Tuesday *string `json:"tuesday,omitempty"`
	Wednesday *string `json:"wednesday,omitempty"`
	Thursday *string `json:"thursday,omitempty"`
	Friday *string `json:"friday,omitempty"`
	Saturday *string `json:"saturday,omitempty"`
	Sunday *string `json:"sunday,omitempty"`
}

// NewStationResultStationStartDays instantiates a new StationResultStationStartDays object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStationResultStationStartDays() *StationResultStationStartDays {
	this := StationResultStationStartDays{}
	return &this
}

// NewStationResultStationStartDaysWithDefaults instantiates a new StationResultStationStartDays object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStationResultStationStartDaysWithDefaults() *StationResultStationStartDays {
	this := StationResultStationStartDays{}
	return &this
}

// GetMonday returns the Monday field value if set, zero value otherwise.
func (o *StationResultStationStartDays) GetMonday() string {
	if o == nil || isNil(o.Monday) {
		var ret string
		return ret
	}
	return *o.Monday
}

// GetMondayOk returns a tuple with the Monday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StationResultStationStartDays) GetMondayOk() (*string, bool) {
	if o == nil || isNil(o.Monday) {
    return nil, false
	}
	return o.Monday, true
}

// HasMonday returns a boolean if a field has been set.
func (o *StationResultStationStartDays) HasMonday() bool {
	if o != nil && !isNil(o.Monday) {
		return true
	}

	return false
}

// SetMonday gets a reference to the given string and assigns it to the Monday field.
func (o *StationResultStationStartDays) SetMonday(v string) {
	o.Monday = &v
}

// GetTuesday returns the Tuesday field value if set, zero value otherwise.
func (o *StationResultStationStartDays) GetTuesday() string {
	if o == nil || isNil(o.Tuesday) {
		var ret string
		return ret
	}
	return *o.Tuesday
}

// GetTuesdayOk returns a tuple with the Tuesday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StationResultStationStartDays) GetTuesdayOk() (*string, bool) {
	if o == nil || isNil(o.Tuesday) {
    return nil, false
	}
	return o.Tuesday, true
}

// HasTuesday returns a boolean if a field has been set.
func (o *StationResultStationStartDays) HasTuesday() bool {
	if o != nil && !isNil(o.Tuesday) {
		return true
	}

	return false
}

// SetTuesday gets a reference to the given string and assigns it to the Tuesday field.
func (o *StationResultStationStartDays) SetTuesday(v string) {
	o.Tuesday = &v
}

// GetWednesday returns the Wednesday field value if set, zero value otherwise.
func (o *StationResultStationStartDays) GetWednesday() string {
	if o == nil || isNil(o.Wednesday) {
		var ret string
		return ret
	}
	return *o.Wednesday
}

// GetWednesdayOk returns a tuple with the Wednesday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StationResultStationStartDays) GetWednesdayOk() (*string, bool) {
	if o == nil || isNil(o.Wednesday) {
    return nil, false
	}
	return o.Wednesday, true
}

// HasWednesday returns a boolean if a field has been set.
func (o *StationResultStationStartDays) HasWednesday() bool {
	if o != nil && !isNil(o.Wednesday) {
		return true
	}

	return false
}

// SetWednesday gets a reference to the given string and assigns it to the Wednesday field.
func (o *StationResultStationStartDays) SetWednesday(v string) {
	o.Wednesday = &v
}

// GetThursday returns the Thursday field value if set, zero value otherwise.
func (o *StationResultStationStartDays) GetThursday() string {
	if o == nil || isNil(o.Thursday) {
		var ret string
		return ret
	}
	return *o.Thursday
}

// GetThursdayOk returns a tuple with the Thursday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StationResultStationStartDays) GetThursdayOk() (*string, bool) {
	if o == nil || isNil(o.Thursday) {
    return nil, false
	}
	return o.Thursday, true
}

// HasThursday returns a boolean if a field has been set.
func (o *StationResultStationStartDays) HasThursday() bool {
	if o != nil && !isNil(o.Thursday) {
		return true
	}

	return false
}

// SetThursday gets a reference to the given string and assigns it to the Thursday field.
func (o *StationResultStationStartDays) SetThursday(v string) {
	o.Thursday = &v
}

// GetFriday returns the Friday field value if set, zero value otherwise.
func (o *StationResultStationStartDays) GetFriday() string {
	if o == nil || isNil(o.Friday) {
		var ret string
		return ret
	}
	return *o.Friday
}

// GetFridayOk returns a tuple with the Friday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StationResultStationStartDays) GetFridayOk() (*string, bool) {
	if o == nil || isNil(o.Friday) {
    return nil, false
	}
	return o.Friday, true
}

// HasFriday returns a boolean if a field has been set.
func (o *StationResultStationStartDays) HasFriday() bool {
	if o != nil && !isNil(o.Friday) {
		return true
	}

	return false
}

// SetFriday gets a reference to the given string and assigns it to the Friday field.
func (o *StationResultStationStartDays) SetFriday(v string) {
	o.Friday = &v
}

// GetSaturday returns the Saturday field value if set, zero value otherwise.
func (o *StationResultStationStartDays) GetSaturday() string {
	if o == nil || isNil(o.Saturday) {
		var ret string
		return ret
	}
	return *o.Saturday
}

// GetSaturdayOk returns a tuple with the Saturday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StationResultStationStartDays) GetSaturdayOk() (*string, bool) {
	if o == nil || isNil(o.Saturday) {
    return nil, false
	}
	return o.Saturday, true
}

// HasSaturday returns a boolean if a field has been set.
func (o *StationResultStationStartDays) HasSaturday() bool {
	if o != nil && !isNil(o.Saturday) {
		return true
	}

	return false
}

// SetSaturday gets a reference to the given string and assigns it to the Saturday field.
func (o *StationResultStationStartDays) SetSaturday(v string) {
	o.Saturday = &v
}

// GetSunday returns the Sunday field value if set, zero value otherwise.
func (o *StationResultStationStartDays) GetSunday() string {
	if o == nil || isNil(o.Sunday) {
		var ret string
		return ret
	}
	return *o.Sunday
}

// GetSundayOk returns a tuple with the Sunday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StationResultStationStartDays) GetSundayOk() (*string, bool) {
	if o == nil || isNil(o.Sunday) {
    return nil, false
	}
	return o.Sunday, true
}

// HasSunday returns a boolean if a field has been set.
func (o *StationResultStationStartDays) HasSunday() bool {
	if o != nil && !isNil(o.Sunday) {
		return true
	}

	return false
}

// SetSunday gets a reference to the given string and assigns it to the Sunday field.
func (o *StationResultStationStartDays) SetSunday(v string) {
	o.Sunday = &v
}

func (o StationResultStationStartDays) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Monday) {
		toSerialize["monday"] = o.Monday
	}
	if !isNil(o.Tuesday) {
		toSerialize["tuesday"] = o.Tuesday
	}
	if !isNil(o.Wednesday) {
		toSerialize["wednesday"] = o.Wednesday
	}
	if !isNil(o.Thursday) {
		toSerialize["thursday"] = o.Thursday
	}
	if !isNil(o.Friday) {
		toSerialize["friday"] = o.Friday
	}
	if !isNil(o.Saturday) {
		toSerialize["saturday"] = o.Saturday
	}
	if !isNil(o.Sunday) {
		toSerialize["sunday"] = o.Sunday
	}
	return json.Marshal(toSerialize)
}

type NullableStationResultStationStartDays struct {
	value *StationResultStationStartDays
	isSet bool
}

func (v NullableStationResultStationStartDays) Get() *StationResultStationStartDays {
	return v.value
}

func (v *NullableStationResultStationStartDays) Set(val *StationResultStationStartDays) {
	v.value = val
	v.isSet = true
}

func (v NullableStationResultStationStartDays) IsSet() bool {
	return v.isSet
}

func (v *NullableStationResultStationStartDays) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStationResultStationStartDays(val *StationResultStationStartDays) *NullableStationResultStationStartDays {
	return &NullableStationResultStationStartDays{value: val, isSet: true}
}

func (v NullableStationResultStationStartDays) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStationResultStationStartDays) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


