/*
RadioManager

This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.

API version: 2.0
Contact: support@pluxbox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package radiomanagerclient

import (
	"encoding/json"
)

// ItemRelations struct for ItemRelations
type ItemRelations struct {
	Block *ItemRelationsBlock `json:"block,omitempty"`
	Broadcast *BlockRelationsBroadcast `json:"broadcast,omitempty"`
	Program *ItemRelationsProgram `json:"program,omitempty"`
	Contacts *ItemRelationsContacts `json:"contacts,omitempty"`
	Tags *ItemRelationsTags `json:"tags,omitempty"`
	Campaign *ItemRelationsCampaign `json:"campaign,omitempty"`
	ModelType *BroadcastRelationsModelType `json:"model_type,omitempty"`
}

// NewItemRelations instantiates a new ItemRelations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemRelations() *ItemRelations {
	this := ItemRelations{}
	return &this
}

// NewItemRelationsWithDefaults instantiates a new ItemRelations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemRelationsWithDefaults() *ItemRelations {
	this := ItemRelations{}
	return &this
}

// GetBlock returns the Block field value if set, zero value otherwise.
func (o *ItemRelations) GetBlock() ItemRelationsBlock {
	if o == nil || isNil(o.Block) {
		var ret ItemRelationsBlock
		return ret
	}
	return *o.Block
}

// GetBlockOk returns a tuple with the Block field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemRelations) GetBlockOk() (*ItemRelationsBlock, bool) {
	if o == nil || isNil(o.Block) {
    return nil, false
	}
	return o.Block, true
}

// HasBlock returns a boolean if a field has been set.
func (o *ItemRelations) HasBlock() bool {
	if o != nil && !isNil(o.Block) {
		return true
	}

	return false
}

// SetBlock gets a reference to the given ItemRelationsBlock and assigns it to the Block field.
func (o *ItemRelations) SetBlock(v ItemRelationsBlock) {
	o.Block = &v
}

// GetBroadcast returns the Broadcast field value if set, zero value otherwise.
func (o *ItemRelations) GetBroadcast() BlockRelationsBroadcast {
	if o == nil || isNil(o.Broadcast) {
		var ret BlockRelationsBroadcast
		return ret
	}
	return *o.Broadcast
}

// GetBroadcastOk returns a tuple with the Broadcast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemRelations) GetBroadcastOk() (*BlockRelationsBroadcast, bool) {
	if o == nil || isNil(o.Broadcast) {
    return nil, false
	}
	return o.Broadcast, true
}

// HasBroadcast returns a boolean if a field has been set.
func (o *ItemRelations) HasBroadcast() bool {
	if o != nil && !isNil(o.Broadcast) {
		return true
	}

	return false
}

// SetBroadcast gets a reference to the given BlockRelationsBroadcast and assigns it to the Broadcast field.
func (o *ItemRelations) SetBroadcast(v BlockRelationsBroadcast) {
	o.Broadcast = &v
}

// GetProgram returns the Program field value if set, zero value otherwise.
func (o *ItemRelations) GetProgram() ItemRelationsProgram {
	if o == nil || isNil(o.Program) {
		var ret ItemRelationsProgram
		return ret
	}
	return *o.Program
}

// GetProgramOk returns a tuple with the Program field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemRelations) GetProgramOk() (*ItemRelationsProgram, bool) {
	if o == nil || isNil(o.Program) {
    return nil, false
	}
	return o.Program, true
}

// HasProgram returns a boolean if a field has been set.
func (o *ItemRelations) HasProgram() bool {
	if o != nil && !isNil(o.Program) {
		return true
	}

	return false
}

// SetProgram gets a reference to the given ItemRelationsProgram and assigns it to the Program field.
func (o *ItemRelations) SetProgram(v ItemRelationsProgram) {
	o.Program = &v
}

// GetContacts returns the Contacts field value if set, zero value otherwise.
func (o *ItemRelations) GetContacts() ItemRelationsContacts {
	if o == nil || isNil(o.Contacts) {
		var ret ItemRelationsContacts
		return ret
	}
	return *o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemRelations) GetContactsOk() (*ItemRelationsContacts, bool) {
	if o == nil || isNil(o.Contacts) {
    return nil, false
	}
	return o.Contacts, true
}

// HasContacts returns a boolean if a field has been set.
func (o *ItemRelations) HasContacts() bool {
	if o != nil && !isNil(o.Contacts) {
		return true
	}

	return false
}

// SetContacts gets a reference to the given ItemRelationsContacts and assigns it to the Contacts field.
func (o *ItemRelations) SetContacts(v ItemRelationsContacts) {
	o.Contacts = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ItemRelations) GetTags() ItemRelationsTags {
	if o == nil || isNil(o.Tags) {
		var ret ItemRelationsTags
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemRelations) GetTagsOk() (*ItemRelationsTags, bool) {
	if o == nil || isNil(o.Tags) {
    return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ItemRelations) HasTags() bool {
	if o != nil && !isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given ItemRelationsTags and assigns it to the Tags field.
func (o *ItemRelations) SetTags(v ItemRelationsTags) {
	o.Tags = &v
}

// GetCampaign returns the Campaign field value if set, zero value otherwise.
func (o *ItemRelations) GetCampaign() ItemRelationsCampaign {
	if o == nil || isNil(o.Campaign) {
		var ret ItemRelationsCampaign
		return ret
	}
	return *o.Campaign
}

// GetCampaignOk returns a tuple with the Campaign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemRelations) GetCampaignOk() (*ItemRelationsCampaign, bool) {
	if o == nil || isNil(o.Campaign) {
    return nil, false
	}
	return o.Campaign, true
}

// HasCampaign returns a boolean if a field has been set.
func (o *ItemRelations) HasCampaign() bool {
	if o != nil && !isNil(o.Campaign) {
		return true
	}

	return false
}

// SetCampaign gets a reference to the given ItemRelationsCampaign and assigns it to the Campaign field.
func (o *ItemRelations) SetCampaign(v ItemRelationsCampaign) {
	o.Campaign = &v
}

// GetModelType returns the ModelType field value if set, zero value otherwise.
func (o *ItemRelations) GetModelType() BroadcastRelationsModelType {
	if o == nil || isNil(o.ModelType) {
		var ret BroadcastRelationsModelType
		return ret
	}
	return *o.ModelType
}

// GetModelTypeOk returns a tuple with the ModelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemRelations) GetModelTypeOk() (*BroadcastRelationsModelType, bool) {
	if o == nil || isNil(o.ModelType) {
    return nil, false
	}
	return o.ModelType, true
}

// HasModelType returns a boolean if a field has been set.
func (o *ItemRelations) HasModelType() bool {
	if o != nil && !isNil(o.ModelType) {
		return true
	}

	return false
}

// SetModelType gets a reference to the given BroadcastRelationsModelType and assigns it to the ModelType field.
func (o *ItemRelations) SetModelType(v BroadcastRelationsModelType) {
	o.ModelType = &v
}

func (o ItemRelations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Block) {
		toSerialize["block"] = o.Block
	}
	if !isNil(o.Broadcast) {
		toSerialize["broadcast"] = o.Broadcast
	}
	if !isNil(o.Program) {
		toSerialize["program"] = o.Program
	}
	if !isNil(o.Contacts) {
		toSerialize["contacts"] = o.Contacts
	}
	if !isNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !isNil(o.Campaign) {
		toSerialize["campaign"] = o.Campaign
	}
	if !isNil(o.ModelType) {
		toSerialize["model_type"] = o.ModelType
	}
	return json.Marshal(toSerialize)
}

type NullableItemRelations struct {
	value *ItemRelations
	isSet bool
}

func (v NullableItemRelations) Get() *ItemRelations {
	return v.value
}

func (v *NullableItemRelations) Set(val *ItemRelations) {
	v.value = val
	v.isSet = true
}

func (v NullableItemRelations) IsSet() bool {
	return v.isSet
}

func (v *NullableItemRelations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemRelations(val *ItemRelations) *NullableItemRelations {
	return &NullableItemRelations{value: val, isSet: true}
}

func (v NullableItemRelations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemRelations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


